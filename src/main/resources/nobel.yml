openapi: 3.1.1
info:
  title: Nobel Prize API
  version: 1.0.0
  summary: This API allows you to maintain Nobel Prize Laureates.
  description: |
    # Nobel Prize API
    This API allows you to maintain Nobel Prize Laureates,
    using REST services.
    ## Purpose
    I created this API just to experiment with Open API, jOOQ, Liquibase and Quarkus.
servers:
  - url: http://localhost:8080
paths:
  /nobelprizecategories:
    get:
      summary: Get all Nobel Prize categories
      operationId: getNobelPrizeCategories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NobelPrizeCategory'
  /nobelprizecategories/{code}:
    get:
      summary: Get a single Nobel Prize category by its code
      operationId: getNobelPrizeCategory
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Nobel Prize category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NobelPrizeCategory'
  /nobelprizes:
    get:
      summary: Get all Nobel prizes
      operationId: getNobelPrizes
      parameters:
        - name: year
          in: query
          required: false
          schema:
            type: integer
          description: Year the Nobel Prize was awarded
        - name: category
          in: query
          required: false
          schema:
            type: string
          description: Category of the Nobel Prize
      responses:
        '200':
          description: List of prizes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NobelPrize'
    post:
      summary: Creates a single Nobel Prize
      operationId: createNobelPrize
      requestBody:
        description: Nobel Prize plus all Laureates
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NobelPrizeCreate'
      responses:
        "201":
          description: Created
  /persons:
    post:
      summary: Creates a person that presumably is a Nobel Prize laureate
      operationId: createPerson
      requestBody:
        description: Person data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "201":
          description: Created
    get:
      summary: Get all persons corresponding to the following selection criteria
      operationId: getPersons
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Part of the (display) name of the person.
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
          description: Code of country where the person was born
        - name: yearOfBirth
          in: query
          required: false
          schema:
            type: integer
          description: Year of birth
        - name: yearOfDeath
          in: query
          required: false
          schema:
            type: integer
          description: Year of death
      responses:
        '200':
          description: List of persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /persons/{id}:
    get:
      summary: Get a single person by its person identifier
      operationId: getPerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Person identifier
      responses:
        '200':
          description: Single person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /organizations:
    post:
      summary: Creates an organization that presumably is a Nobel Prize laureate
      operationId: createOrganization
      requestBody:
        description: Organization data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        "201":
          description: Created
    get:
      summary: Get all organizations corresponding to the following selection criteria
      operationId: getOrganizations
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Beginning of the name of the organization.
      responses:
        '200':
          description: List of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /organizations/{id}:
    get:
      summary: Get a single organization by its organization identifier
      operationId: getOrganization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Organization identifier
      responses:
        '200':
          description: Single organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /countries:
    get:
      summary: Get all countries
      responses:
        '200':
          description: List of countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
components:
  schemas:
    NobelPrizeCategoryEnum:
      type: string
      enum: [ 'P', 'C', 'M', 'L', 'E', 'PC' ]
    NobelPrizeCategory:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/NobelPrizeCategoryEnum'
        description:
          type: string
    NobelPrizeCreate:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/NobelPrizeCategoryEnum'
        year:
          type: integer
          minimum: 1900
        url:
          type: string
        laureates:
          type: array
          items:
            $ref: '#/components/schemas/NobelPrizeLaureateCreate'
      required:
        - type
        - category
        - year
        - laureates
    NobelPrize:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/NobelPrizeCategoryEnum'
        year:
          type: integer
          minimum: 1900
        url:
          type: string
        laureates:
          type: array
          items:
            $ref: '#/components/schemas/NobelPrizeLaureate'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdById:
          type: integer
          readOnly: true
        lastModifiedAt:
          type: string
          format: date-time
          readOnly: true
        lastModifiedById:
          type: integer
          readOnly: true
    PersonIdentifier:
      type: object
      properties:
         personIdentifier:
           type: string
           description: A unique identifier for a person.
    OrganizationIdentifier:
      type: object
      properties:
        organizationIdentifier:
          type: string
          description: A unique identifier for an organization.
    NobelPrizeLaureateCreate:
      type: object
      properties:
        type:
          oneOf:
            - $ref: '#/components/schemas/PersonIdentifier'
            - $ref: '#/components/schemas/OrganizationIdentifier'
        description:
          type: string
        fractionNominator:
          type: integer
          minimum: 1
          maximum: 100
        fractionDenominator:
          type: integer
          minimum: 1
          maximum: 100
      required:
        - type
        - fractionNominator
        - fractionDenominator
    NobelPrizeLaureate:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        organization:
          $ref: '#/components/schemas/Organization'
        description:
          type: string
        fractionNominator:
          type: integer
          minimum: 1
          maximum: 100
        fractionDenominator:
          type: integer
          minimum: 1
          maximum: 100
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdById:
          type: integer
          readOnly: true
        lastModifiedAt:
          type: string
          format: date-time
          readOnly: true
        lastModifiedById:
          type: integer
          readOnly: true
    Person:
      type: object
      properties:
        personIdentifier:
          type: string
          description: Uniquely identifies a single person
          minLength: 1
          maxLength: 50
        name:
          type: string
          minLength: 1
          maxLength: 50
        displayName:
          type: string
        description:
          type: string
        birthDate:
          type: string
          format: date
        birthCountryCode:
          type: string
          minLength: 2
          maxLength: 2
        deathDate:
          type: string
          format: date
        url:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdById:
          type: integer
          readOnly: true
        lastModifiedAt:
          type: string
          format: date-time
          readOnly: true
        lastModifiedById:
          type: integer
          readOnly: true
      required:
        - identifier
        - name
        - birthDate
        - birthCountryCode
    Organization:
      type: object
      properties:
        organizationIdentifier:
          type: string
          description: Uniquely identifies a single organization
        name:
          type: string
        description:
          type: string
        url:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdById:
          type: integer
          readOnly: true
        lastModifiedAt:
          type: string
          format: date-time
          readOnly: true
        lastModifiedById:
          type: integer
          readOnly: true
    Country:
      type: object
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 2
        name:
          type: string
        nationality:
          type: string
    User:
      type: object
      properties:
        active:
          type: boolean
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdById:
          type: integer
          readOnly: true
        lastModifiedAt:
          type: string
          format: date-time
          readOnly: true
        lastModifiedById:
          type: integer
          readOnly: true
